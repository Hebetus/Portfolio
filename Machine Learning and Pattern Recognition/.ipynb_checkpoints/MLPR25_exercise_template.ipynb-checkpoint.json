{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "TKO_3120 Machine Learning and Pattern Recognition\n",
    "\n",
    "Image recognition exercise\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "This is the template for the image recognition exercise. <Br>\n",
    "Some **general instructions**:\n",
    " - write a clear *report*, understandable for an unspecialized reader: define shortly the concepts and explain the phases you use\n",
    "    - use the Markdown feature of the notebook for larger explanations\n",
    " - return your output as a working Jupyter notebook\n",
    " - name your file as MLPR25_exercise_surname_firstname.jpynb\n",
    " - write easily readable code with comments     \n",
    "     - if you exploit some code from web, provide a reference\n",
    "     - avoid redundant code! Exploit the relevent parts and modify the code for your purposes to produce only what you need \n",
    " - it is ok to discuss with a friend about the assignment. But it is not ok to copy someone's work. Everyone should submit their own implementation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Deadline 14th of March at 16:00**\n",
    "- No extension granted, unless you have an extremely justified reason. In such case, ask for extension well in advance!\n",
    "- Start now, do not leave it to the last minute. This exercise will need some labour!\n",
    "- If you encounter problems\n",
    "    - Google first \n",
    "    - ask for help at the discussion area at Moodle\n",
    "    - email tmvaha@utu.fi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Grading**\n",
    "\n",
    "The exercise covers a part of the grading in this course. The course exam has 5 questions, 6 points of each. Exercise gives 6 points, i.e. the total score is 36 points. Two extra points can be acquired by completing the bonus task. <br>\n",
    "\n",
    "From the template below, you can see how many exercise points can be acquired from each task. Exam points are given according to the table below: <br>\n",
    "<br>\n",
    "9-10 exercise points: 1 point <br>\n",
    "11-12 exercise points: 2 points <br>\n",
    "13-14 exercise points: 3 points <br>\n",
    "15-16 exercise points: 4 points <br>\n",
    "17-18 exercise points: 5 points <br>\n",
    "19-20 exercise points: 6 points <br>\n",
    "<br>\n",
    "To pass the exercise, you need at least 8 exercise points, distributed somewhat evenly into tasks (you can't just implement Introduction, Data preparation and Feature extraction and leave the left undone!) <br>       "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Write an introductory chapter for your report **(1 p)**\n",
    "<br>E.g.\n",
    "- What is the purpose of this task?\n",
    "- What kind of data were used? Where did it originate?\n",
    "- Which methods did you use?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Three sets of image URLs provided as text files (in Moodle): grass, sand and stairs\n",
    "\n",
    "Images are with different resolution and dimensions\n",
    "Images have been gathered from https://unsplash.com/"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Data preparation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Perform preparations for the data **(3 p)**\n",
    "- import all the packages needed for this notebook in one cell\n",
    "- read the URL:s from the text files and import the images\n",
    "- crop and/or resize the images into same size\n",
    "- for GLCM and GLRLM, change the images into grayscale and reduce the quantization level, e.g. to 8 levels"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature extraction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### First order texture measures (6 features)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Calculate the below mentioned color features for each image **(1 p)**\n",
    "    - Mean for each RGB color channel\n",
    "    - Variance for each RGB color channel"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Second order texture measures (4 features)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Gray-Level-Co-Occurrence (GLCM) features (4 features) **(2 p)**\n",
    "    - For each image\n",
    "        - calculate the GLC matrix\n",
    "        - calculate the \"correlation\" feature using the GLC matrix that you acquired \n",
    "            - in horizontal and vertical directions for two reference pixel distances (you can choose the distances)\n",
    "        - explain your choise for the distances<br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Gather your features into an input array X, and the image classes into an output array y. Standardize the feature values in X."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Feature relationships"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Make illustrations of the feature relationships, and discuss the results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Pairplot\n",
    "\n",
    "- Pairplot **(1 p)**\n",
    "    - Which feature pairs possess roughly linear dependence?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Histograms\n",
    "\n",
    "- Histograms **(1 p)**\n",
    "    - Plot a histogram for each Z-scored feature. Plot all the image classes in the same figure and use different color for each.\n",
    "    - Which features may have some discriminative power over image classes according to the histograms? <br>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### PCA"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- PCA **(1 p)**\n",
    "    - Plot the image glasses using different colors.\n",
    "    - Can you see clusters in PCA?\n",
    "    - Does this figure give you any clues, how well you will be able to classify the image types? Explain."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Build classifiers and select the best hyperparameters with cross validation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Perform model selection for each classifier. Use 5-fold stratified cross validation (*StratifiedKFold* and *GridSearchCV* from sklearn). Use the following hyperparameters:\n",
    "\n",
    "- Ridge Classifier (1 p)\n",
    "    - strength of the regularization term: alpha = [0.001, 0.01, 0.1, 1.0]\n",
    "\n",
    "- Random Forest **(1 p)**\n",
    "    - n_estimators from 100 to 300 with 50 steps\n",
    "    - max_features = ['sqrt', 'log2', None]\n",
    "    - whether to use bootstrap or not \n",
    "    \n",
    "- MLP **(1 p)**\n",
    "    - use one hidden layer\n",
    "    - number of neurons in the hidden layer from 15 to 40 in 5 neuron steps\n",
    "    - activation function: hyperbolic tanh function and rectified linear unit function\n",
    "    - solver: stochastic gradient descent and adam\n",
    "    - validation_fraction: 0.1 and 0.3\n",
    "    - strength of the L2 regularization term: alpha = [0.01, 0.1, 1]\n",
    "\n",
    "For each classifier:\n",
    "- Report the selected combination of hyperparameters <br>\n",
    "- Report the accuracy value for each hyperparameter combination <br>\n",
    "\n",
    "For Random Forest model, report the feature importance for each feature. Which features seem to be the most important? Does this correspond with the observations you made in the data exploration? **(1 p)**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Estimate the performance of the models with nested cross-validation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Estimate the performance of each model using nested cross validation. <br>\n",
    "We'll use 4-fold Stratified Kfold cross-validation and the same parameter ranges as earlier for the inner loop. <br>\n",
    "For the outer loop we'll use 5-fold Stratified Kfold cross-validation.\n",
    "\n",
    "For each classifier: \n",
    "- Ridge Classifier **(1 p)**\n",
    "- Random Forest **(1 p)**\n",
    "- MLP **(1 p)**\n",
    "\n",
    "    Report the selected combination of the hyperparameters and the accuracy value for the best hyperparameter combination. <br> \n",
    "    Create a confusion matrix of the results. <br>\n",
    "    Calculate the mean accuracy of the outer rounds. What does it mean? **(1 p)**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Discussion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Discuss you results **(2 p)**\n",
    "<br>E.g.\n",
    "    - Which model performs the best and why?\n",
    "    - What are the limitations?\n",
    "    - How could the results be improved?"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
